@model Bug_Tracker.Models.Ticket

@{
    ViewBag.Title = "Create";
}
<style>
    #background {
        background-color: transparent;
    }
  #createcard {
        margin-left: 300px;
        padding-top: 50px;
       
    }
  #createbutton {
      background-color: #ffa1a1;
  }
    body {
        /*background-image: url('../../Content/black-sunglasses-on-pink-card-2008144.jpg');*/
        background-image: url('../../Content/snow-capped-mountains-under-the-cloudy-skies-1054289.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100%;
        background-position: center;
        z-index: 9000;
    }

</style>
<div class="container" >
    <div class="col-12" id="background">
        <div class="col-lg-6" id="createcard">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title m-0">Create Ticket</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @if (Model.ProjectId == 0)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProjectId, "Project Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.ProjectId)
                            }

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, "Ticket Title", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketTypeId,"Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketTypeId")
                                    @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketPriorityId")
                                    @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                                @Html.LabelFor(model => model.IsArchived, "Is Archived", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsArchived)
                                        @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.FileUrl, "Add An Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input name="image" type="file" class="form-control" id="fileUpload" />
                                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" id="createbutton"/>
                                </div>
                            </div>
                        </div>
                    }

                    <a class="btn btn-secondary btn-sm" onclick="history.back(-1)">
                        <i class="fas fa-arrow-alt-circle-left">
                        </i>
                        Go Back
                    </a>
                    @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |*@
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
