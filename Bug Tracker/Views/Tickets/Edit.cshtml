@model Bug_Tracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}
    <style>
        #btns {
            margin-right: 10px;
        }

        #createcard {
            margin-left: 350px;
            padding-top: 50px;
        }

        #createbutton {
            background-color: #ffa1a1;
        }

        body {
            background-image: url('../../Content/abstract-black-and-white-blur-book-261763.jpg');
            /*background-image: url('../../Content/black-sunglasses-on-pink-card-2008144.jpg');*/
            /*background-image: url('../../Content/snow-capped-mountains-under-the-cloudy-skies-1054289.jpg');*/
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: 100%;
            background-position: center;
            z-index: 9000;
        }
    </style>

<div class="container">
    <div class="col-12">
        <div class="col-lg-4" id="createcard">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title m-0">Edit Ticket</h4>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.ProjectId)
                            @Html.HiddenFor(model => model.SubmitterId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketStatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                            @if (!User.IsInRole("Sub") || !User.IsInRole("DemoSub"))
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TicketTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })

                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.TicketTypeId)
                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketPriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })

                                </div>
                            </div>
                            @if (User.IsInRole("Admin") || User.IsInRole("DemoAdmin") || User.IsInRole("DemoPM") || User.IsInRole("PM"))
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DeveloperId, "Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("DeveloperId", null, "--Select Developer--", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.DeveloperId)
                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsArchived)
                                        @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10" >
                                    <input type="submit" value="Save" class="btn btn-default" id="createbutton" />
                                </div>
                            </div>
                        </div>
                    }

                    <a class="btn btn-secondary btn-sm" onclick="history.back(-1)">
                        <i class="fas fa-arrow-alt-circle-left">
                        </i>
                        Go Back
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
